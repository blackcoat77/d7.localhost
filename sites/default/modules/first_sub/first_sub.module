<?php

/**
 *  @file 
 *  File sub module for practicing and using drupal's API
 * 
 *  This module serves for testing the API and playing with other functions including coding standards
 *  It will create few blocks from the existing module
 *  
 */



/**
 *  implements hook_help().
 */
function first_sub_help($path, $arg) {
  switch ($path) {
    // Main module help for the first_sub module
    case 'admin/help#first_sub':
        global $user;
        $values = array('!url' => 'http://google.com', //placeholders:  if we put ! before placeholder it will translate as it is. only for url is good
                                '@name' => $user->name, // this placeholder will be sanatized inside t function
                                '%color' => 'blue'); // this placeholder is decorator ex. My favorite color is <em>blue</em>.
        return t('This is a help text for first_sub module and we are checking placeholder !url and @name and %color', $values);
    }
}

/**
 *  Implements hook_block_info()
 */
function first_sub_block_info()  {
    $blocks = array();
    
    $blocks['list_cities'] = array(
        'info' => t('List all cities from array'),
        'cache' => DRUPAL_NO_CACHE,
    );
    
    $blocks['list_fruits'] = array(
        'info' => t('List fall ruits from array'),
        'cache' => DRUPAL_NO_CACHE,
    );
    
    $blocks['list_colors'] = array(
        'info' => t('list all colors'),
        'cache' => DRUPAL_NO_CACHE,
    );
    
    $blocks['list_cars'] = array(
        'info' => t('List all cars from my function'),
        'cache' => DRUPAL_NO_CACHE,
    );
    
    return $blocks;
}

/**
 * Implements hook_block_view() str.45
 */
function first_sub_block_view($block_name = '') {
  // This example is adapted from node.module.
  $block = '';

  switch ($block_name) {
      
    case 'list_cities':  // List cities
        global $user;  
        // Show only this block to users profile page with role buyer. Roles are checked in Admin page. Here we just check user
        if (arg(0) == 'user' && $user->uid == arg(1) && arg(2) == '' )  { 
        $cities = array('France' => 'Paris', 'Serbia' => 'Belgrade', 'USA' => 'Washington DC', 'Iceland' => 'Reykjavik');
        
        $theme_args = array('items' => $cities, 'type' => 'ul');
        $content = theme('item_list', $theme_args);
        
        $block = array(
            'subject' => t('All cities'),
            'content' => $content,
        );
     }
      break;

    case 'list_fruits':  // List fruits
        
        global $user;  
        // Show only this block to users profile page with role seller. Roles are checked in Admin page. Here we just check user
        if (arg(0) == 'user' && $user->uid == arg(1) && arg(2) == '' )  { 
        $fruits = array('Tangerines', 'Apples', 'Oranges', 'Plums');
        
        $theme_args = array('items' => $fruits, 'type' => 'ul');
        $content = theme('item_list', $theme_args);
        
        $block = array(
            'subject' => t('All fruits'),
            'content' => $content,
        );
     }
      break;
      
    case 'list_colors': // List colors
        
        $colors = array('Yellow', 'Brown', 'blue', 'red', 'purple');
        
        $theme_args = array('items' => $colors, 'type' => 'ol');
        $content = theme('item_list', $theme_args);
        
        $block = array(
            'subject' => t('Print all colors from array'),
            'content' => $content,
        );
        
        break;
    
    case 'list_cars': // List cars
        
        function my_cars()  {
            $all_cars = array('Fiat', 'Lamborgini', 'Audi', 'Mercedes', 'Bentley');
            return $all_cars;
        }
        
        $cars = my_cars();
        
        $theme_args = array('items' => $cars, 'type' => 'ol');
        $content = theme('item_list', $theme_args);
        
        $block = array(
            'subject' => t('Print all cars from custom function'),
            'content' => $content,
        );
        
        break;
}
  return $block;
}


// This function bellow fires before theme() and it alters the module beheviour before theme() is fired...page 68
function first_sub_preprocess_item_list(&$variables)  {
    // Add a class to the list wrapper
    $variables['attributes']['class'][] = 'content item-list foo-list';
}